# [PackageDev] target_format: plist, ext: tmLanguage
---
name: TTCN-3
scopeName: source.ttcn3
fileTypes: [ttcn]
#uuid: bb8a6bfa-adfe-45b6-aa12-b1bda309e67d

patterns:

- name: entity.name.type.ttcn3
  match: function\s(\w+)\s*\(
  captures:
    '1': {name: entity.name.type.ttcn3}
  comment: fucntion definition

- name: entity.name.type.ttcn3
  match: testcase\s(\w+)
  captures:
    '1': {name: entity.name.type.ttcn3}
  comment: testcase definition

- name: entity.name.type.ttcn3
  match: type\s(\w+)\s+(\w+)
  captures:
    '3': {name: entity.name.type.ttcn3}
  comment: type definition

- name: entity.name.type.ttcn3
  match: ^\s*template\s+(\w+)\s+a_(\w+)
  captures:
    '3': {name: entity.name.type.ttcn3}
  comment: template definition

- include: '#comment'
- include: '#builtin_functions_name'
- include: '#builtin_types'
- include: '#builtin_operator'
- include: '#builtin_keyword'

- name: module
  match: (module)\s+(\w+)\s+
  captures:
    '1': {name: storage.type.ttcn3}
    '2': {name: entity.name.type.ttcn3}


- name: keyword.control.ttcn3
  begin: import\s+from\s+(\w+)\s*\{
  beginCaptures:
    '1': {name: entity.name.type.ttcn3}
  end: \}
  patterns:
  - include: '#builtin_keyword'

- name: keyword.control.ttcn3
  match: import\s+from\s+(\w+)\s+
  captures:
    '1': {name: entity.name.type.ttcn3}
  patterns:
  - include: '#builtin_keyword'

- name: keyword.operator.ttcn3.
  match: (:=|->)

- name: string.quoted.single.ttcn3 
  match: \'[01]*\'B
  comment: bitstring

- name: string.quoted.single.ttcn3
  match: \'([a-eA-E0-9][a-eA-E0-9])*\'O
  comment: octetstring

- name: string.quoted.single.ttcn3
  match: \'[a-eA-E0-9]*\'H
  comment: hexstring

- name: string.quoted.double.ttcn3
  match: \".*\"
  comment: string

- name: constant.numeric.ttcn3
  match: \b[\d+|infinity|\-infinity]+\b
  comment: numeric



- name: support.type.ttcn3
  match: \b(testcase|function|template|type|altstep|var|const)\b

repository:

  builtin_functions_name:
    name: support.function.ttcn3
    match: (?x) \b(int2char|int2unichar|int2bit|int2hex|int2oct|int2str|int2float|float2int|
              ichar2int|unichar2int|bit2int|bit2hex|bit2oct|bit2str|hex2int|hex2bit|hex2oct|hex2str|
              oct2int|oct2bit|oct2str|str2int|str2oct|lengthof|sizeof|ispresent|ischosen|regexp|substr|rnd)\b

  builtin_types:
    name: support.type.ttcn3
    match: (?x) \b(address|anytype|boolean|char|default|float|integer|objid|verdicttype|timer
              |set|record|union|enumerated|component|port|of|charstring|octetstring|hexstring|bitstring|
              universal|true|false|omit|null|pass|fail|inconc|none|error|module)\b

  builtin_operator:
    patterns:
    - match: (?x) \b(mod|rem|not|and|or|xor|not4b|and4b|or4b|xor4b|complement|pattern|match|valueof|
                self|mtc|read|activate|create|running|system|subset|superset|getverdict)\b
      captures:
        '1': {name: keyword.operator.ttcn3}
    - match: \b*([-+*/?<>=])\b*
      captures:
        '1': {name: keyword.operator.ttcn3}
    - match: \b*([=!><]=)\b*
      captures:
        '1': {name: keyword.operator.ttcn3}
    - match: \b*(\.\.)\b*
      captures:
        '1': {name: keyword.operator.ttcn3}

  builtin_keyword:
    patterns:
    - match: \s*\b(if|else|for|while|do|repeat)\b
      captures:
        '1': {name: keyword.operator.ttcn3}
    - match: |-
             (?x)
             \b(log|stop|alt|interleave|deactivate|connect|disconnect|map|unmap|start|
                   done|send|call|reply|receive|trigger|getcall|getreply|check|clear|timeout|
                   setverdict|action|execute|return|goto|label|raise|catch|control|runs|on|
                   in|out|inout|any|all|sender|to|value|modifies|nowait|param|length|recursive|
                   except|optional|ifpresent|language|override|modulepar|group|import|from|ASN\.1)\b
      captures:
        '1': {name: support.type.ttcn3}
    - match: (?x) \b(signature|noblock|exception|message|
                      procedure|mixed|external)\b
      captures:
        '1': {name: entity.name.type.ttcn3}

    - match: \s*\b(with|display|encode|extension|variant)\b
      captures:
        '1': {name: entity.other.attribute-name.ttcn3}

  comment: 
    patterns:
    - name: comment.block.documentation.ttcn3
      begin: /\*
      end: \*/

    - name: comment.line.double-slash.ttcn3
      match: //.*

...