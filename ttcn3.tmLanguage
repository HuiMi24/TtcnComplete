<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ttcn</string>
		<string>ttcn3</string>
	</array>
	<key>name</key>
	<string>TTCN-3</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.ttcn3</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>fucntion definition</string>
			<key>match</key>
			<string>(function)\s(\w+)\s*\(</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.ttcn3</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>testcase definition</string>
			<key>match</key>
			<string>(testcase)\s(\w+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.ttcn3</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>type definition</string>
			<key>match</key>
			<string>(type)\s*(record|set)\s*.*of\s*\w+\s+(\w+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.ttcn3</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>type definition</string>
			<key>match</key>
			<string>(type|const)\s*(\w+)\s+(\w+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.ttcn3</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>template definition</string>
			<key>match</key>
			<string>^\s*(template)\s+(\w+)\s+(\w+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.ttcn3</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(module)\s+(\w+)\s+</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.ttcn3</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(modulepar)\s*{?\s*(\w+)\s+(\w+)\s+</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.ttcn3</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*altstep\s+(\w+)\s*\(</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.ttcn3</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*(timer)\s+(\w+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.type.ttcn3</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.ttcn3</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*(port)\s+(\w+)\s+(\w+)</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_functions_name</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_operator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin_keyword</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(:=|-&gt;)</string>
			<key>name</key>
			<string>keyword.operator.ttcn3.</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>bitstring</string>
			<key>match</key>
			<string>\'[01]*\'B</string>
			<key>name</key>
			<string>string.quoted.single.ttcn3</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>octetstring</string>
			<key>match</key>
			<string>\'([a-fA-F0-9][a-fA-F0-9])*\'O</string>
			<key>name</key>
			<string>string.quoted.single.ttcn3</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>hexstring</string>
			<key>match</key>
			<string>\'[a-fA-F0-9]*\'H</string>
			<key>name</key>
			<string>string.quoted.single.ttcn3</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>string</string>
			<key>match</key>
			<string>\".*\"</string>
			<key>name</key>
			<string>string.quoted.double.ttcn3</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>numeric</string>
			<key>match</key>
			<string>\b[\d+|infinity|\-infinity]+\b</string>
			<key>name</key>
			<string>constant.numeric.ttcn3</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(testcase|function|template|type|altstep|var|const)\b</string>
			<key>name</key>
			<string>support.type.ttcn3</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>builtin_functions_name</key>
		<dict>
			<key>match</key>
			<string>(?x) \b(int2char|int2unichar|int2bit|int2hex|int2oct|int2str|int2float|float2int| ichar2int|unichar2int|bit2int|bit2hex|bit2oct|bit2str|hex2int|hex2bit|hex2oct|hex2str| oct2int|oct2bit|oct2str|str2int|str2oct|lengthof|sizeof|ispresent|ischosen|regexp|substr|rnd)\b</string>
			<key>name</key>
			<string>support.function.ttcn3</string>
		</dict>
		<key>builtin_keyword</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ttcn3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s*\b(if|else|for|while|do|repeat)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.type.ttcn3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
\b(log|stop|alt|interleave|deactivate|connect|disconnect|map|unmap|start|
      done|send|call|reply|receive|trigger|getcall|getreply|check|clear|timeout|
      setverdict|action|execute|return|goto|label|raise|catch|control|runs|on|
      in|out|inout|any|all|sender|to|value|modifies|nowait|param|length|recursive|
      except|optional|ifpresent|language|override|modulepar|group|import|from|ASN\.1)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.ttcn3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x) \b(signature|noblock|exception|message| procedure|mixed|external)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.ttcn3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s*\b(with|display|encode|extension|variant)\b</string>
				</dict>
			</array>
		</dict>
		<key>builtin_operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ttcn3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x) \b(mod|rem|not|and|or|xor|not4b|and4b|or4b|xor4b|complement|pattern|match|valueof| self|mtc|read|activate|create|running|system|subset|superset|getverdict)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ttcn3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b*([-+*/?&lt;&gt;=])\b*</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ttcn3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b*([=!&gt;&lt;]=)\b*</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.ttcn3</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b*(\.\.)\b*</string>
				</dict>
			</array>
		</dict>
		<key>builtin_types</key>
		<dict>
			<key>match</key>
			<string>(?x) \b(address|anytype|boolean|char|default|float|integer|objid|verdicttype|timer |set|record|union|enumerated|component|port|of|charstring|octetstring|hexstring|bitstring| universal|true|false|omit|null|pass|fail|inconc|none|error|module)\b</string>
			<key>name</key>
			<string>support.type.ttcn3</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.ttcn3</string>
				</dict>
				<dict>
					<key>match</key>
					<string>//.*</string>
					<key>name</key>
					<string>comment.line.double-slash.ttcn3</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.ttcn3</string>
</dict>
</plist>
